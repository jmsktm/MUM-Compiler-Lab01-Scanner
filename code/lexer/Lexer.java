/* This file was generated by SableCC (http://www.sablecc.org/). */

package lexer;

import java.io.*;
import node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.NORMAL;

    private PushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") PushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 53:
                        {
                            @SuppressWarnings("hiding") Token token = new53(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 54:
                        {
                            @SuppressWarnings("hiding") Token token = new54(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 55:
                        {
                            @SuppressWarnings("hiding") Token token = new55(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 56:
                        {
                            @SuppressWarnings("hiding") Token token = new56(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 57:
                        {
                            @SuppressWarnings("hiding") Token token = new57(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComment(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStringLiteral(text, line, pos); }
    Token new2(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCharLiteral(text, line, pos); }
    Token new3(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEscapeStringLiteral(text, line, pos); }
    Token new4(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEscape(text, line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMult(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiv(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLessThan(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLessThanOrEq(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGreaterThan(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGreaterThanOrEq(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEquals(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAnd(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOr(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNot(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColon(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemicolon(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLPar(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRPar(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBrace(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBrace(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBkt(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBkt(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNotEquals(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEqualTo(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPointer(line, pos); }
    Token new29(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFloatLit(text, line, pos); }
    Token new30(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhiteSpace(text, line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBool(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBreak(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TChar(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TConst(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TContinue(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKclass(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDo(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TElse(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFalse(line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFloat(line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIf(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInt(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNew(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNull(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPrivate(line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProtected(line, pos); }
    Token new47(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPublic(line, pos); }
    Token new48(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReturn(line, pos); }
    Token new49(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStatic(line, pos); }
    Token new50(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TString(line, pos); }
    Token new51(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStruct(line, pos); }
    Token new52(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TThis(line, pos); }
    Token new53(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTrue(line, pos); }
    Token new54(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhile(line, pos); }
    Token new55(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVoid(line, pos); }
    Token new56(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIntegerLiteral(text, line, pos); }
    Token new57(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdentifier(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // NORMAL
            {{9, 9, 1}, {10, 10, 2}, {12, 12, 3}, {13, 13, 4}, {32, 32, 5}, {33, 33, 6}, {34, 34, 7}, {38, 38, 8}, {39, 39, 9}, {40, 40, 10}, {41, 41, 11}, {42, 42, 12}, {43, 43, 13}, {44, 44, 14}, {45, 45, 15}, {46, 46, 16}, {47, 47, 17}, {48, 48, 18}, {49, 57, 19}, {58, 58, 20}, {59, 59, 21}, {60, 60, 22}, {61, 61, 23}, {62, 62, 24}, {65, 90, 25}, {91, 91, 26}, {93, 93, 27}, {95, 95, 25}, {97, 97, 25}, {98, 98, 28}, {99, 99, 29}, {100, 100, 30}, {101, 101, 31}, {102, 102, 32}, {103, 104, 25}, {105, 105, 33}, {106, 109, 25}, {110, 110, 34}, {111, 111, 25}, {112, 112, 35}, {113, 113, 25}, {114, 114, 36}, {115, 115, 37}, {116, 116, 38}, {117, 117, 25}, {118, 118, 39}, {119, 119, 40}, {120, 122, 25}, {123, 123, 41}, {124, 124, 42}, {125, 125, 43}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 9, 1}, {10, 10, 44}, {12, 32, -2}, },
            {{9, 32, -2}, },
            {{61, 61, 45}, },
            {{0, 9, 46}, {11, 12, 46}, {14, 33, 46}, {34, 34, 47}, {35, 91, 46}, {92, 92, 48}, {93, 65535, 46}, },
            {{38, 38, 49}, },
            {{32, 32, 50}, {33, 33, 51}, {34, 34, 52}, {35, 35, 53}, {36, 36, 54}, {37, 37, 55}, {38, 38, 56}, {40, 40, 57}, {41, 41, 58}, {42, 42, 59}, {43, 43, 60}, {44, 44, 61}, {45, 45, 62}, {46, 46, 63}, {47, 47, 64}, {48, 57, 65}, {58, 58, 66}, {59, 59, 67}, {60, 60, 68}, {61, 61, 69}, {62, 62, 70}, {63, 63, 71}, {64, 64, 72}, {65, 90, 73}, {91, 91, 74}, {92, 92, 75}, {93, 93, 76}, {94, 94, 77}, {95, 95, 78}, {96, 96, 79}, {97, 122, 80}, {123, 123, 81}, {124, 124, 82}, {125, 125, 83}, {126, 126, 84}, },
            {},
            {},
            {},
            {},
            {},
            {{62, 62, 85}, },
            {{48, 57, 86}, },
            {{42, 42, 87}, {47, 47, 88}, },
            {{46, 46, 89}, {48, 57, 18}, },
            {{46, 46, 89}, {48, 57, 90}, },
            {},
            {},
            {{61, 61, 91}, },
            {{61, 61, 92}, },
            {{61, 61, 93}, },
            {{48, 57, 94}, {65, 90, 94}, {95, 95, 94}, {97, 122, 94}, },
            {},
            {},
            {{48, 95, -27}, {97, 110, 94}, {111, 111, 95}, {112, 113, 94}, {114, 114, 96}, {115, 122, 94}, },
            {{48, 95, -27}, {97, 103, 94}, {104, 104, 97}, {105, 107, 94}, {108, 108, 98}, {109, 110, 94}, {111, 111, 99}, {112, 122, 94}, },
            {{48, 110, -30}, {111, 111, 100}, {112, 122, 94}, },
            {{48, 95, -27}, {97, 107, 94}, {108, 108, 101}, {109, 122, 94}, },
            {{48, 95, -27}, {97, 97, 102}, {98, 107, 94}, {108, 108, 103}, {109, 122, 94}, },
            {{48, 95, -27}, {97, 101, 94}, {102, 102, 104}, {103, 109, 94}, {110, 110, 105}, {111, 122, 94}, },
            {{48, 95, -27}, {97, 100, 94}, {101, 101, 106}, {102, 116, 94}, {117, 117, 107}, {118, 122, 94}, },
            {{48, 95, -27}, {97, 113, 94}, {114, 114, 108}, {115, 116, 94}, {117, 117, 109}, {118, 122, 94}, },
            {{48, 100, -36}, {101, 101, 110}, {102, 122, 94}, },
            {{48, 95, -27}, {97, 115, 94}, {116, 116, 111}, {117, 122, 94}, },
            {{48, 103, -31}, {104, 104, 112}, {105, 113, 94}, {114, 114, 113}, {115, 122, 94}, },
            {{48, 110, -30}, {111, 111, 114}, {112, 122, 94}, },
            {{48, 103, -31}, {104, 104, 115}, {105, 122, 94}, },
            {},
            {{124, 124, 116}, },
            {},
            {{9, 32, -2}, },
            {},
            {{0, 65535, -9}, },
            {},
            {{0, 33, -9}, {34, 34, 117}, {35, 38, 46}, {39, 39, 118}, {40, 91, 46}, {92, 92, 119}, {93, 97, 46}, {98, 98, 120}, {99, 101, 46}, {102, 102, 121}, {103, 109, 46}, {110, 110, 122}, {111, 113, 46}, {114, 114, 123}, {115, 115, 46}, {116, 116, 124}, {117, 65535, 46}, },
            {},
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{34, 34, 126}, {39, 39, 127}, {92, 92, 128}, {98, 98, 129}, {102, 102, 130}, {110, 110, 131}, {114, 114, 132}, {116, 116, 133}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {{39, 39, 125}, },
            {},
            {{48, 57, 86}, {69, 69, 134}, {101, 101, 135}, },
            {{0, 41, 136}, {42, 42, 137}, {43, 65535, 136}, },
            {{0, 9, 138}, {10, 10, 139}, {11, 12, 138}, {13, 13, 140}, {14, 65535, 138}, },
            {{48, 57, 141}, {69, 101, -88}, },
            {{46, 57, -21}, },
            {},
            {},
            {},
            {{48, 122, -27}, },
            {{48, 110, -30}, {111, 111, 142}, {112, 122, 94}, },
            {{48, 100, -36}, {101, 101, 143}, {102, 122, 94}, },
            {{48, 95, -27}, {97, 97, 144}, {98, 122, 94}, },
            {{48, 95, -27}, {97, 97, 145}, {98, 122, 94}, },
            {{48, 95, -27}, {97, 109, 94}, {110, 110, 146}, {111, 122, 94}, },
            {{48, 122, -27}, },
            {{48, 95, -27}, {97, 114, 94}, {115, 115, 147}, {116, 122, 94}, },
            {{48, 107, -33}, {108, 108, 148}, {109, 122, 94}, },
            {{48, 110, -30}, {111, 111, 149}, {112, 122, 94}, },
            {{48, 122, -27}, },
            {{48, 115, -39}, {116, 116, 150}, {117, 122, 94}, },
            {{48, 95, -27}, {97, 118, 94}, {119, 119, 151}, {120, 122, 94}, },
            {{48, 107, -33}, {108, 108, 152}, {109, 122, 94}, },
            {{48, 95, -27}, {97, 104, 94}, {105, 105, 153}, {106, 110, 94}, {111, 111, 154}, {112, 122, 94}, },
            {{48, 95, -27}, {97, 97, 94}, {98, 98, 155}, {99, 122, 94}, },
            {{48, 115, -39}, {116, 116, 156}, {117, 122, 94}, },
            {{48, 95, -27}, {97, 97, 157}, {98, 113, 94}, {114, 114, 158}, {115, 122, 94}, },
            {{48, 104, -110}, {105, 105, 159}, {106, 122, 94}, },
            {{48, 95, -27}, {97, 116, 94}, {117, 117, 160}, {118, 122, 94}, },
            {{48, 104, -110}, {105, 105, 161}, {106, 122, 94}, },
            {{48, 104, -110}, {105, 105, 162}, {106, 122, 94}, },
            {},
            {{0, 9, 163}, {11, 12, 163}, {14, 33, 163}, {34, 34, 164}, {35, 91, 163}, {92, 92, 165}, {93, 65535, 163}, },
            {{0, 65535, -9}, },
            {{0, 65535, -50}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {},
            {{39, 39, 166}, },
            {{39, 39, 166}, },
            {{39, 39, 166}, },
            {{39, 39, 166}, },
            {{39, 39, 166}, },
            {{39, 39, 166}, },
            {{39, 39, 166}, },
            {{39, 39, 166}, },
            {{43, 43, 167}, {45, 45, 168}, {48, 57, 169}, },
            {{43, 57, -136}, },
            {{0, 65535, -89}, },
            {{0, 41, 170}, {42, 42, 137}, {43, 46, 170}, {47, 47, 171}, {48, 65535, 170}, },
            {{0, 65535, -90}, },
            {},
            {{10, 10, 172}, },
            {{48, 101, -91}, },
            {{48, 107, -33}, {108, 108, 173}, {109, 122, 94}, },
            {{48, 95, -27}, {97, 97, 174}, {98, 122, 94}, },
            {{48, 113, -37}, {114, 114, 175}, {115, 122, 94}, },
            {{48, 114, -103}, {115, 115, 176}, {116, 122, 94}, },
            {{48, 114, -103}, {115, 115, 177}, {116, 116, 178}, {117, 122, 94}, },
            {{48, 100, -36}, {101, 101, 179}, {102, 122, 94}, },
            {{48, 114, -103}, {115, 115, 180}, {116, 122, 94}, },
            {{48, 95, -27}, {97, 97, 181}, {98, 122, 94}, },
            {{48, 122, -27}, },
            {{48, 122, -27}, },
            {{48, 107, -33}, {108, 108, 182}, {109, 122, 94}, },
            {{48, 95, -27}, {97, 117, 94}, {118, 118, 183}, {119, 122, 94}, },
            {{48, 115, -39}, {116, 116, 184}, {117, 122, 94}, },
            {{48, 107, -33}, {108, 108, 185}, {109, 122, 94}, },
            {{48, 116, -115}, {117, 117, 186}, {118, 122, 94}, },
            {{48, 115, -39}, {116, 116, 187}, {117, 122, 94}, },
            {{48, 104, -110}, {105, 105, 188}, {106, 116, 94}, {117, 117, 189}, {118, 122, 94}, },
            {{48, 114, -103}, {115, 115, 190}, {116, 122, 94}, },
            {{48, 100, -36}, {101, 101, 191}, {102, 122, 94}, },
            {{48, 95, -27}, {97, 99, 94}, {100, 100, 192}, {101, 122, 94}, },
            {{48, 107, -33}, {108, 108, 193}, {109, 122, 94}, },
            {{0, 65535, -119}, },
            {},
            {{0, 33, -119}, {34, 34, 194}, {35, 38, 163}, {39, 39, 195}, {40, 91, 163}, {92, 92, 196}, {93, 97, 163}, {98, 98, 197}, {99, 101, 163}, {102, 102, 198}, {103, 109, 163}, {110, 110, 199}, {111, 113, 163}, {114, 114, 200}, {115, 115, 163}, {116, 116, 201}, {117, 65535, 163}, },
            {},
            {{48, 57, 169}, },
            {{48, 57, 169}, },
            {{48, 57, 169}, },
            {{0, 41, 202}, {42, 42, 203}, {43, 65535, 202}, },
            {},
            {},
            {{48, 122, -27}, },
            {{48, 95, -27}, {97, 106, 94}, {107, 107, 204}, {108, 122, 94}, },
            {{48, 122, -27}, },
            {{48, 114, -103}, {115, 115, 205}, {116, 122, 94}, },
            {{48, 115, -39}, {116, 116, 206}, {117, 122, 94}, },
            {{48, 104, -110}, {105, 105, 207}, {106, 122, 94}, },
            {{48, 122, -27}, },
            {{48, 100, -36}, {101, 101, 208}, {102, 122, 94}, },
            {{48, 115, -39}, {116, 116, 209}, {117, 122, 94}, },
            {{48, 122, -27}, },
            {{48, 95, -27}, {97, 97, 210}, {98, 122, 94}, },
            {{48, 100, -36}, {101, 101, 211}, {102, 122, 94}, },
            {{48, 104, -110}, {105, 105, 212}, {106, 122, 94}, },
            {{48, 113, -37}, {114, 114, 213}, {115, 122, 94}, },
            {{48, 104, -110}, {105, 105, 214}, {106, 122, 94}, },
            {{48, 109, -101}, {110, 110, 215}, {111, 122, 94}, },
            {{48, 95, -27}, {97, 98, 94}, {99, 99, 216}, {100, 122, 94}, },
            {{48, 122, -27}, },
            {{48, 122, -27}, },
            {{48, 122, -27}, },
            {{48, 100, -36}, {101, 101, 217}, {102, 122, 94}, },
            {{0, 65535, -119}, },
            {{0, 65535, -119}, },
            {{0, 65535, -167}, },
            {{0, 65535, -119}, },
            {{0, 65535, -119}, },
            {{0, 65535, -119}, },
            {{0, 65535, -119}, },
            {{0, 65535, -119}, },
            {{0, 65535, -172}, },
            {{0, 41, 170}, {42, 42, 203}, {43, 65535, -139}, },
            {{48, 122, -27}, },
            {{48, 122, -27}, },
            {{48, 122, -27}, },
            {{48, 109, -101}, {110, 110, 218}, {111, 122, 94}, },
            {{48, 122, -27}, },
            {{48, 122, -27}, },
            {{48, 115, -39}, {116, 116, 219}, {117, 122, 94}, },
            {{48, 98, -191}, {99, 99, 220}, {100, 122, 94}, },
            {{48, 98, -191}, {99, 99, 221}, {100, 122, 94}, },
            {{48, 109, -101}, {110, 110, 222}, {111, 122, 94}, },
            {{48, 98, -191}, {99, 99, 223}, {100, 122, 94}, },
            {{48, 95, -27}, {97, 102, 94}, {103, 103, 224}, {104, 122, 94}, },
            {{48, 115, -39}, {116, 116, 225}, {117, 122, 94}, },
            {{48, 122, -27}, },
            {{48, 116, -115}, {117, 117, 226}, {118, 122, 94}, },
            {{48, 100, -36}, {101, 101, 227}, {102, 122, 94}, },
            {{48, 115, -39}, {116, 116, 228}, {117, 122, 94}, },
            {{48, 122, -27}, },
            {{48, 122, -27}, },
            {{48, 122, -27}, },
            {{48, 122, -27}, },
            {{48, 122, -27}, },
            {{48, 100, -36}, {101, 101, 229}, {102, 122, 94}, },
            {{48, 122, -27}, },
            {{48, 100, -36}, {101, 101, 230}, {102, 122, 94}, },
            {{48, 122, -27}, },
            {{48, 99, -163}, {100, 100, 231}, {101, 122, 94}, },
            {{48, 122, -27}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // NORMAL
        {30, 30, 30, 30, 30, 30, 16, -1, -1, -1, 20, 21, 7, 5, 19, 6, -1, 8, -1, 56, 17, 18, 9, 27, 11, 57, 24, 25, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 22, -1, 23, 30, 26, -1, 1, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 28, 29, -1, -1, 29, 56, 10, 13, 12, 57, 57, 57, 57, 57, 57, 37, 57, 57, 57, 41, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 15, 1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 29, 57, 57, 57, 57, 57, 57, 57, 57, 42, 43, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, -1, 3, -1, 4, -1, -1, 29, -1, 0, 0, 31, 57, 33, 57, 57, 57, 38, 57, 57, 44, 57, 57, 57, 57, 57, 57, 57, 52, 53, 55, 57, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 32, 36, 34, 57, 39, 40, 57, 57, 57, 57, 57, 57, 57, 54, 57, 57, 57, 47, 48, 49, 50, 51, 57, 45, 57, 35, 57, 46, },

    };*/

    public static class State
    {
        public final static State NORMAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
